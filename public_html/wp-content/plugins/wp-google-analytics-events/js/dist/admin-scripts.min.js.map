{"version":3,"sources":["admin.js","ajax-settings.js","reports.js"],"names":["tailwind","config","theme","extend","colors","java","DEFAULT","50","100","200","300","400","500","600","700","800","900","brand","primary","primary-hover","primary-focus","danger","danger-hover","danger-focus","input","inactive","active","jQuery","document","ready","$","snippet_type","anonymizeip","anonymizeip_checkbox","gtm_id","disable_element","el","attr","enable_element","removeAttr","set_checked_value","bool","checked","widget","bridge","ui","tooltip","gaetooltip","position","my","at","collision","on","this","is","show","hide","e","slideDown","preventDefault","slideUp","val","sessionStorage","getItem","css","pointer-events","opacity","prop","checkbox","index","data","trackValue","eventValue","trigger","window","open","gaeAjax","openAndPoplulateEventModal","id_post","modalId","ajax","type","url","wpflow_ajax","ajax_url","post_id","action","success","result","modal","populateMetaEditForm","meta","hasOwnProperty","error","alert","saveGAView","nonce","viewId","ajax_nonce","location","reload","signOutFromGoogleAnalytics","redirect_url","btoa","protocol","host","pathname","search","accessToken","removeItem","submitEventForm","form","serialize","fn","noConflict","Promise","resolve","global_from_date","global_to_date","g","fjs","queryString","refresh_report","urlParams","URLSearchParams","currentPage","get","ga_reports","ga_view_id","async","allEventsReportRequest","includeEmptyRows","dateRanges","startDate","endDate","metrics","expression","dimensions","name","top10DownloadsReportRequest","filtersExpression","orderBys","fieldName","orderType","sortOrder","pageSize","top10EmailLinksReportRequest","reportResponse","queryReports","drawLineChart","reports","rows","drawTableChart","displayGeneralReports","filterExpressionArray","Array","filterExpression","clicksCategories","push","clicksLabels","clicksActions","allClicksReportRequest","join","top10ClicksByCategoryReportRequest","top10ClicksByLabelReportRequest","top10ClicksByActionReportRequest","displayClicksReports","scrollCategories","scrollLabels","scrollActions","allScrollEventsReportRequest","top10ScrollByCategoryReportRequest","top10ScrollByLabelReportRequest","top10ScrollByActionReportRequest","displayScrollReports","redirect2AuthProxy","w","d","gapi","analytics","q","cb","js","createElement","getElementsByTagName","src","parentNode","insertBefore","onload","load","google","charts","packages","auth","response","authenticate","then","r","fromDate","moment","subtract","startOf","toDate","endOf","format","daterangepicker","datepickerOptions","numberOfMonths","minDate","maxDate","altFormat","start","end","change","event","dateRange","tokenCreated","setItem","timeElapsed","Date","now","timeRemaining","authorize","serverAuth","access_token","viewSelector","ViewSelector","container","toggle","execute","ids","reportBatchRequests","client","request","path","root","method","body","reportRequests","title","xAxisName","xAxisType","yAxisName","yAxisType","reportRows","chartContainer","visualization","DataTable","addColumn","length","forEach","row","addRow","stringDate","year","substr","month","day","D","getFullYear","getMonth","getDate","parseInt","values","Line","getElementById","draw","convertOptions","curveType","legend","textStyle","fontSize","col1Name","col1Type","col2Name","col2Type","options","setColumnProperty","showRowNumber","width","height","addRows","minWidth","Table"],"mappings":"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","file":"admin-scripts.min.js","sourcesContent":["/**\n * Created with IntelliJ IDEA.\n * User: yuval\n * Date: 2/25/15\n * Time: 1:08 PM\n * To change this template use File | Settings | File Templates.\n */\n\ntailwind.config = {\n  theme: {\n    extend: {\n      colors: {\n        java: {\n          DEFAULT: \"#19C8B4\",\n          50: \"#A5F4EB\",\n          100: \"#93F1E7\",\n          200: \"#6EEDDE\",\n          300: \"#4AE8D6\",\n          400: \"#26E4CE\",\n          500: \"#19C8B4\",\n          600: \"#139687\",\n          700: \"#0D645A\",\n          800: \"#06322D\",\n          900: \"#000100\",\n        },\n        brand: {\n          primary: \"#785afa\",\n          \"primary-hover\": \"#B9A9FC\",\n          \"primary-focus\": \"#D9D1FE\",\n          danger: \"#9c095d\",\n          \"danger-hover\": \"#da0790\",\n          \"danger-focus\": \"#c91444\",\n          input: \"#8c8f94\",\n          50: \"#FFFFFF\",\n          100: \"#FAF8FF\",\n          200: \"#D9D1FE\",\n          300: \"#B9A9FC\",\n          400: \"#9882FB\",\n          500: \"#785AFA\",\n          600: \"#4B24F8\",\n          700: \"#2F07DD\",\n          800: \"#2305A7\",\n          900: \"#180370\",\n          inactive: \"#4B24F8\",\n          active: \"#5a527e\",\n        },\n      },\n    },\n  },\n};\n\njQuery(document).ready(function ($) {\n  var snippet_type = $(\"#snippet_type\");\n  var anonymizeip = $(\"#anonymizeip\");\n  var anonymizeip_checkbox = $(\"#anonymizeip\")[0];\n  var gtm_id = $(\"#gtm_id\");\n  var script_debug_mode_input = $(\"#script_debug_mode\");\n\n  // Helpers to avoid repetition\n  function disable_element(el) {\n    el.attr(\"disabled\", true);\n  }\n\n  function enable_element(el) {\n    el.removeAttr(\"disabled\");\n  }\n\n  function set_checked_value(el, bool) {\n    el.checked = bool;\n  }\n\n  // set up tooltips\n  $.widget.bridge(\"gaetooltip\", $.ui.tooltip);\n\n  $(\".ga-tooltip\").gaetooltip({\n    position: {\n      my: \"left bottom-10\",\n      at: \"right top\",\n      collision: \"none\",\n    },\n  });\n\n  $(\"#advanced:checkbox\").on(\"change\", function () {\n    var checked = $(this).is(\":checked\");\n    if (checked) {\n      $(\"#forcesnopperwrap\").show();\n      $(\"#wpflow_gs_reports_section\").show();\n    } else {\n      $(\"#forcesnopperwrap\").hide();\n      $(\"#wpflow_gs_reports_section\").hide();\n    }\n  });\n\n  $(\".btn_upload\").on(\"click\", function (e) {\n    $(\".settings_content\").slideDown();\n    e.preventDefault();\n  });\n\n  $(\".btn_close\").on(\"click\", function (e) {\n    $(\".settings_content\").slideUp();\n    e.preventDefault();\n  });\n\n  $(\".popup\").on(\"click\", function (e) {\n    $(\".popup\").slideUp();\n    e.preventDefault();\n  });\n\n  /*\n   * The following section deals with the snippet type options in the admin UI\n   */\n\n  // If page loads and snippet type is 'none' or 'gtm', disable anonymize IP checkbox\n  if (snippet_type.val() === \"none\" || snippet_type.val() === \"gtm\") {\n    set_checked_value(anonymizeip_checkbox, false);\n    disable_element(anonymizeip);\n  }\n\n  // If page loads and snippet_type is 'gtm', enable gtm_id\n  if (snippet_type.val() === \"gtm\") {\n    enable_element(gtm_id);\n  } else {\n    disable_element(gtm_id);\n  }\n\n  // When the snippet type option is changed\n  snippet_type.on(\"change\", function () {\n    // Store current value\n    var val = $(this).val();\n\n    // If 'none' is selected, disable anonymize zip checkbox and ?\n    if (val === \"none\" || val === \"gtm\") {\n      set_checked_value(anonymizeip_checkbox, false);\n      disable_element(anonymizeip);\n    } else {\n      enable_element(anonymizeip);\n    }\n\n    // If gtm snippet is selected\n    if (val === \"gtm\") {\n      enable_element(gtm_id);\n    } else {\n      disable_element(gtm_id);\n    }\n  });\n\n  // Snippet section ends\n\n  // The following section deals with the import settings functinality in\n  // general settings\n  $(\".btn_upload\").on(\"click\", function (e) {\n    $(\".settings_content\").slideDown();\n    e.preventDefault();\n  });\n\n  $(\".btn_close\").on(\"click\", function (e) {\n    $(\".settings_content\").slideUp();\n    e.preventDefault();\n  });\n\n  $(\".popup\").on(\"click\", function (e) {\n    $(\".popup\").slideUp();\n    e.preventDefault();\n  });\n\n  // import section ends\n\n  // GA client Signout section\n\n  // If page loads and there is no gaAccessToken then disable signout button.\n  if (!sessionStorage.getItem(\"gaAccessToken\")) {\n    disable_element($(\".btn_signout_ga\"));\n  }\n\n  // Disable checkbox for admin options management permission\n  $('input[name=\"ga_events_options[permitted_roles][]\"][value=\"administrator\"]')\n    .css({ \"pointer-events\": \"none\", opacity: 0.5 })\n    .prop(\"checked\", true);\n\n  $(\".divs-istracktime:checkbox\").on(\"change\", function () {\n    var checkbox = $(this);\n    var checked = checkbox.is(\":checked\");\n    var index = checkbox.data(\"track\");\n    var trackValue = \"#track-elem\" + index;\n    var eventValue = \"#eventValue\" + index;\n    if (checked) {\n      $(trackValue).show();\n      $(eventValue).attr(\"disabled\", true);\n    } else {\n      $(trackValue).hide();\n      $(eventValue).removeAttr(\"disabled\");\n    }\n  });\n\n  $(\"#empty-istracktime:checkbox\").on(\"change\", function () {\n    var checkbox = $(this);\n    var checked = checkbox.is(\":checked\");\n    var trackValue = \"#empty-trackelem\";\n    var eventValue = \"#empty-eventValue\";\n    if (checked) {\n      $(trackValue).show();\n      $(eventValue).attr(\"disabled\", true);\n    } else {\n      $(trackValue).hide();\n      $(eventValue).removeAttr(\"disabled\");\n    }\n  });\n\n  $(\".divs-istracktime\").trigger(\"change\");\n\n  function isUrlValid(url) {\n    return /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(\n      url\n    );\n  }\n\n  jQuery(\"body\").on(\n    \"click\",\n    'a[href=\"admin.php?page=wp-google-analytics-events-upgrade\"]',\n    function (e) {\n      e.preventDefault();\n      window.open(\n        \"https://wpflow.com/upgrade/?utm_source=wpadmin&utm_medium=banner&utm_campaign=nav\",\n        \"_blank\"\n      );\n    }\n  );\n});\n","/*global\n $, wpflow_ajax, jslint, alert\n */\nvar gaeAjax = (function ($) {\n  $(document).ready(function ($) {\n    // Handle twitter bootstrap modals\n    if (typeof $.fn.modal.noConflict !== \"undefined\") {\n      var bootstrapModal = $.fn.modal.noConflict();\n    }\n\n    // Form Submit\n    $(\".wpgae-event-form\").on(\"submit\", submitEventForm);\n    // Populate and Show the edit event modal\n    $(\".ga_main .edit a\").on(\"click\", openAndPoplulateEventModal);\n    // Populate and Show the Delete event modal\n    $(\".ga_main .delete a\").on(\"click\", openAndPoplulateEventModal);\n    $(\"#ga-save-view\").on(\"click\", saveGAView);\n    $(\".btn_signout_ga\").on(\"click\", signOutFromGoogleAnalytics);\n\n    // $('.deactivate a[href*=\"wp-google-analytics-events\"], #wpgae-modal-cancel a').on('click', function(e) {\n    //   e.preventDefault();\n    //   $(\"#wpgae-modal-content, #wpgae-modal-background\").toggleClass(\"active\");\n    //   $(\"#wpgae-just-deactivate\").attr(\"href\", this.href);\n    // });\n\n    $(\"#wpgae-feedback-form\").on(\"submit\", function (e) {\n      e.preventDefault(); // avoid to execute the actual submit of the form.\n      var form = $(this);\n\n      $.ajax({\n        type: \"POST\",\n        url: wpflow_ajax.ajax_url,\n        data: form.serialize(), // serializes the form's elements.\n        success: function (data) {\n          window.location = $(\"#wpgae-just-deactivate\").attr(\"href\");\n        },\n      });\n    });\n  });\n\n  function openAndPoplulateEventModal(e) {\n    e.preventDefault();\n    var id_post = $(this).attr(\"id\");\n    var modalId = \"#\" + $(this).data(\"action\");\n    $.ajax({\n      type: \"POST\",\n      url: wpflow_ajax.ajax_url,\n      data: {\n        post_id: id_post,\n        action: \"wpflow_get_event_json\",\n      },\n      success: function (result) {\n        $(modalId).modal();\n        populateMetaEditForm(modalId, result.meta);\n        $(modalId + \" #event_id\").val(id_post);\n      },\n      error: function () {\n        alert(\"Error updating event\");\n      },\n    });\n  }\n\n  function saveGAView(e) {\n    var nonce = $(this).data(\"nonce\");\n    $.ajax({\n      type: \"post\",\n      url: wpflow_ajax.ajax_url,\n      data: {\n        viewId: $(this).val(),\n        action: \"wpflow_save_view\",\n        ajax_nonce: nonce,\n      },\n      success: function (data) {\n        window.location.reload();\n      },\n    });\n  }\n\n  function signOutFromGoogleAnalytics(e) {\n    e.preventDefault();\n    var nonce = $(this).data(\"delete-nonce\");\n    $.ajax({\n      type: \"post\",\n      url: wpflow_ajax.ajax_url,\n      data: {\n        viewId: $(this).val(),\n        action: \"wpflow_ga_disconnect\",\n        ajax_nonce: nonce,\n      },\n      success: function (data) {\n        var redirect_url = btoa(\n          window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname +\n            window.location.search\n        );\n        var accessToken = btoa(sessionStorage.getItem(\"gaAccessToken\"));\n        sessionStorage.removeItem(\"gaAccessToken\");\n        sessionStorage.removeItem(\"gaTokenCreated\");\n        // var encodedRedirectUrl = encodeURIComponent(redirect_url);\n        // var encodedAccessToken = encodeURIComponent(accessToken);\n        window.location =\n          \"https://auth.wpflow.com/ga/sign_out/?redirectUrl=\" +\n          redirect_url +\n          \"&accessToken=\" +\n          accessToken;\n      },\n    });\n  }\n\n  function submitEventForm(e) {\n    e.preventDefault();\n    var form = $(this);\n\n    $.ajax({\n      type: \"post\",\n      url: wpflow_ajax.ajax_url,\n      data: form.serialize(),\n      success: function (data) {\n        window.location.reload();\n      },\n    });\n  }\n\n  function populateMetaEditForm(modal, meta) {\n    if (typeof meta !== \"undefined\") {\n      for (var input in meta) {\n        if (meta.hasOwnProperty(input)) {\n          if ($(modal + \" #\" + input).is(\":checkbox\")) {\n            if (meta[input][0] === \"true\") {\n              $(modal + \" #\" + input).attr(\"checked\", true);\n            } else {\n              $(modal + \" #\" + input).removeAttr(\"checked\", false);\n            }\n          } else {\n            $(modal + \" #\" + input).val(meta[input][0]);\n          }\n        }\n      }\n    }\n  }\n})(jQuery);\n","\n\n(function () {\n\n  var queue = Promise.resolve();\n  // Starting point..\n\n\n  var queryString = window.location.search;\n  var urlParams = new URLSearchParams(queryString);\n  var report = urlParams.get(\"report\") === \"true\";\n  var global_from_date,global_to_date;\n\n  if (report) {\n    (function (w, d, s, g, js, fjs) {\n      g = w.gapi || (w.gapi = {});\n      g.analytics = {\n        q: [], ready: function (cb) {\n          this.q.push(cb)\n        }\n      };\n      js = d.createElement(s);\n      fjs = d.getElementsByTagName(s)[0];\n      js.src = 'https://apis.google.com/js/platform.js';\n      fjs.parentNode.insertBefore(js, fjs);\n      js.onload = function () {\n        g.load('analytics')\n      };\n    }(window, document, 'script'));\n\n    google.charts.load('current', {'packages': ['corechart', 'line', 'table']});\n    gapi.analytics.ready(function () {\n\n    // Put your application code here...\n\n      // Register on authorization success event\n\n      gapi.analytics.auth.on('signIn', function (response) {\n        // if (typeof ga_reports.ga_view_id === 'undefined') {\n        //dateRangeSelector.execute();\n      });\n\n      // Call the authenticate function that will take care to authorize the user\n      authenticate().then(r => {\n        // Set default date range for the reports\n        var fromDate = moment().subtract(30,'days').startOf('day').toDate();\n        var toDate = moment().endOf('day').toDate();\n        global_from_date = moment(fromDate).format('YYYY-MM-DD');\n        global_to_date = moment(toDate).format('YYYY-MM-DD');\n\n        //Display the date range selector\n        jQuery('#daterange').daterangepicker({\n          datepickerOptions : {\n            numberOfMonths : 2,\n            minDate: '-12M',\n            maxDate: '+0',\n            altFormat: \"yyyy-mm-dd\"\n          }\n        });\n\n        jQuery('#daterange').daterangepicker(\"setRange\",{start: fromDate, end: toDate });\n        jQuery('#daterange').daterangepicker({change: function(event, data) {\n            var dateRange = jQuery('#daterange').daterangepicker(\"getRange\");\n            global_from_date = moment(dateRange.start).format('YYYY-MM-DD');\n            global_to_date = moment(dateRange.end).format('YYYY-MM-DD');\n            refresh_report();\n          }\n        });\n\n        refresh_report();\n      });\n    });\n  }\n\n  function refresh_report() {\n\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const currentPage = urlParams.get(\"page\");\n\n    if (typeof ga_reports === 'undefined' || typeof ga_reports.ga_view_id === 'undefined'){\n      return;\n    }\n    if (currentPage === \"wp-google-analytics-events\") {\n      displayGeneralReports();\n    } else if (currentPage === \"wp-google-analytics-events-click\") {\n      displayClicksReports();\n    } else if (currentPage === \"wp-google-analytics-events-scroll\") {\n       displayScrollReports();\n    }\n  }\n\n\n  function redirect2AuthProxy() {\n    var redirect_url = btoa(window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search);\n    // we need to actually redirect to allow redirection to google\n    window.location = 'https://auth.wpflow.com/ga/auth/' + redirect_url;\n  }\n\n  // This function authenticates the user. It first checks if the user is authenticated already in this session by checking\n  // for client code. If there is no client code it redirects to the authentication proxy to get a client code\n\n  const authenticate = async () => {\n\n    const queryString = window.location.search;\n    queryString;\n    const urlParams = new URLSearchParams(queryString);\n\n    if (sessionStorage.getItem('gaAccessToken')) {\n      accessToken = sessionStorage.getItem('gaAccessToken');\n      tokenCreated = sessionStorage.getItem('gaTokenCreated')\n    } else if (urlParams.get('gaToken')) {\n      accessToken = urlParams.get('gaToken');\n      tokenCreated = urlParams.get('gaTokenCreated') * 1000; // to miliseconds\n      sessionStorage.setItem('gaAccessToken', accessToken);\n      sessionStorage.setItem('gaTokenCreated', tokenCreated);\n    } else {\n      accessToken = null;\n      tokenCreated = null;\n    }\n\n    // First check if we have already an access token in the session.\n\n    if (!accessToken) { // if there is no access token then let's get it from the proxy\n      jQuery('.ga-reports-no-auth').toggle();\n    } else { // There is a token, let's check if it is still valid.\n             timeElapsed = (Date.now() - tokenCreated) / 1000; //to seconds\n             timeRemaining = 3600 - timeElapsed;      // 3600 seconds TTL for access token\n             if (timeRemaining < 120) {     //\n                   sessionStorage.removeItem('gaAccessToken');\n                   sessionStorage.removeItem('gaTokenCreated');\n                   redirect2AuthProxy();\n             } else if (typeof ga_reports === 'undefined' || typeof ga_reports.ga_view_id === 'undefined') {\n                   await gapi.analytics.auth.authorize({\n                       serverAuth: {\n                           access_token: accessToken\n                       }\n                   });\n                   // Token is valid, check if the view is selected, if not present the view form\n\n                   var viewSelector = new gapi.analytics.ViewSelector({container: 'view-selector'});\n                   jQuery('.ga-view-form').toggle();\n\n                   viewSelector.execute();    // Run the view selector after a successful authentication\n\n                   viewSelector.on('change', function (ids) {\n                      jQuery('#ga-save-view').val(ids);\n                   });\n             } else {\n                   jQuery('.ga-reports-section').css(\"display\", \"flex\");\n                   // Now authorize the user for analytics API given the access token to the gapi object\n                   await gapi.analytics.auth.authorize({\n                       serverAuth: {\n                          access_token: accessToken\n                       }\n                   });\n             }\n    }\n\n    jQuery('#ga-auth').on('click', function (e) {\n      e.preventDefault();\n      redirect2AuthProxy();\n    });\n\n  }\n\n// Starting point..\n\n  async function displayGeneralReports() {\n    var allEventsReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], dimensions: [{\n        name: 'ga:date',\n      }],\n    }\n\n    var top10DownloadsReportRequest = {\n      viewId: ga_reports.ga_view_id,  includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: 'ga:eventAction==Download', dimensions: [{\n        name: 'ga:eventLabel',\n      }], orderBys: [{\n        fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    var top10EmailLinksReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: 'ga:eventAction==Email Link', dimensions: [{\n        name: 'ga:eventLabel',\n      }], orderBys: [{\n        fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n\n    var generalReportBatchRequests = [allEventsReportRequest, top10DownloadsReportRequest, top10EmailLinksReportRequest];\n    reportResponse = await queryReports(generalReportBatchRequests);\n    drawLineChart(\"All Event Clicks\", \"Date\", \"date\", \"Events\", \"number\", reportResponse.result.reports[0].data.rows, 'all-events-chart');\n    drawTableChart(\"Top 10 Downloads\", \"Top 10 Downloads\", \"string\", \"Downloads\", \"number\", reportResponse.result.reports[1].data.rows, 'top10-downloads-chart');\n    drawTableChart(\"Top 10 Email Links\", \"Top 10 Email Links\", \"string\", \"Clicks\", \"number\", reportResponse.result.reports[2].data.rows, 'top10-email-links-chart');\n  }\n\n  async function displayClicksReports() {\n    // Since there are other categories/labels/actions which are not related to clicks we need to filter the clicks only according to the\n    // relevant defined categories/labels/actions. In case they are not defined we need to define a dummy filter\n\n    var filterExpressionArray = new Array;\n    var filterExpression = \"\";\n\n    if (ga_reports.clicksCategories) filterExpressionArray.push(ga_reports.clicksCategories);\n    if (ga_reports.clicksLabels) filterExpressionArray.push(ga_reports.clicksLabels);\n    if (ga_reports.clicksActions) filterExpressionArray.push(ga_reports.clicksActions);\n    if (filterExpression.length = 0) filterExpressionArray.push (\"ga:eventCategory==-9999999\"); // Dummy expression in case all are blanks\n\n    var allClicksReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpressionArray.join(), dimensions: [{\n        name: 'ga:date',\n      }],\n    }\n\n    filterExpression = ga_reports.clicksCategories ? ga_reports.clicksCategories : \"ga:eventCategory==-9999999\";\n    var top10ClicksByCategoryReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression , dimensions: [{\n        name: 'ga:eventCategory',\n      }], orderBys: [{\n        fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    filterExpression = ga_reports.clicksLabels ? ga_reports.clicksLabels : \"ga:eventLabel==-9999999\";\n    var top10ClicksByLabelReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression, dimensions: [{\n        name: 'ga:eventLabel',\n      }], orderBys: [{\n        fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    filterExpression = ga_reports.clicksActions ? ga_reports.clicksActions : \"ga:eventAction==-9999999\";\n    var top10ClicksByActionReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression, dimensions: [{\n        name: 'ga:eventAction',\n      }], orderBys: [{\n         fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    var allClicksReportBatchRequests = [allClicksReportRequest, top10ClicksByCategoryReportRequest,top10ClicksByLabelReportRequest,top10ClicksByActionReportRequest];\n    reportResponse = await queryReports(allClicksReportBatchRequests);\n    drawLineChart(\"All Clicks\", \"Date\", \"date\", \"Events\", \"number\", reportResponse.result.reports[0].data.rows, 'all-clicks-chart');\n    drawTableChart(\"\", \"Top 10 Clicks by Category\", \"string\", \"Clicks\", \"number\", reportResponse.result.reports[1].data.rows, 'top10-clicks-by-category-chart');\n    drawTableChart(\"\", \"Top 10 Clicks by Label\", \"string\", \"Clicks\", \"number\", reportResponse.result.reports[2].data.rows, 'top10-clicks-by-label-chart');\n    drawTableChart(\"\", \"Top 10 Clicks by Action\", \"string\", \"Clicks\", \"number\", reportResponse.result.reports[3].data.rows, 'top10-clicks-by-action-chart');\n  }\n\n  async function displayScrollReports() {\n    // Since there are other categories/labels/actions which are not related to clicks we need to filter the clicks only according to the\n    // relevant defined categories/labels/actions. In case they are not defined we need to define a dummy filter\n\n    var filterExpressionArray = new Array;\n    var filterExpression = \"\";\n\n    if (ga_reports.scrollCategories) filterExpressionArray.push(ga_reports.scrollCategories);\n    if (ga_reports.scrollLabels) filterExpressionArray.push(ga_reports.scrollLabels);\n    if (ga_reports.scrollActions) filterExpressionArray.push(ga_reports.scrollActions);\n    if (filterExpression.length = 0) filterExpressionArray.push (\"ga:eventCategory==-9999999\"); // Dummy expression in case all are blanks\n\n    var allScrollEventsReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpressionArray.join(), dimensions: [{\n        name: 'ga:date',\n      }],\n    }\n\n    filterExpression = ga_reports.scrollCategories ? ga_reports.scrollCategories : \"ga:eventCategory==-9999999\";\n    var top10ScrollByCategoryReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression , dimensions: [{\n        name: 'ga:eventCategory',\n      }], orderBys: [{\n         fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    filterExpression = ga_reports.scrollLabels ? ga_reports.scrollLabels : \"ga:eventLabel==-9999999\";\n    var top10ScrollByLabelReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression, dimensions: [{\n        name: 'ga:eventLabel',\n      }], orderBys: [{\n         fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    filterExpression = ga_reports.scrollActions ? ga_reports.scrollActions : \"ga:eventAction==-9999999\";\n    var top10ScrollByActionReportRequest = {\n      viewId: ga_reports.ga_view_id, includeEmptyRows: true, dateRanges: [{\n        startDate: global_from_date, endDate: global_to_date\n      }], metrics: [{\n        expression: 'ga:totalEvents'\n      }], filtersExpression: filterExpression, dimensions: [{\n        name: 'ga:eventAction',\n      }], orderBys: [{\n         fieldName: 'ga:totalEvents', orderType: 'VALUE', sortOrder: \"DESCENDING\"\n      }], pageSize: 10\n    }\n\n    var allScrollReportBatchRequests = [allScrollEventsReportRequest, top10ScrollByCategoryReportRequest,top10ScrollByLabelReportRequest,top10ScrollByActionReportRequest];\n    reportResponse = await queryReports(allScrollReportBatchRequests);\n    drawLineChart(\"All Scroll Events\", \"Date\", \"date\", \"Events\", \"number\", reportResponse.result.reports[0].data.rows, 'all-scroll-events-chart');\n    drawTableChart(\"\", \"Top 10 Scroll Events by Category\", \"string\", \"Events\", \"number\", reportResponse.result.reports[1].data.rows, 'top10-scroll-by-category-chart');\n    drawTableChart(\"\", \"Top 10 Scroll Events by Label\", \"string\", \"Events\", \"number\", reportResponse.result.reports[2].data.rows, 'top10-scroll-by-label-chart');\n    drawTableChart(\"\", \"Top 10 Scroll Events by Action\", \"string\", \"Events\", \"number\", reportResponse.result.reports[3].data.rows, 'top10-scroll-by-action-chart');\n  }\n\n\n\n// Query the API and print the results to the page.\n  function queryReports(reportBatchRequests) {\n    return gapi.client.request({\n      path: '/v4/reports:batchGet', root: 'https://analyticsreporting.googleapis.com/', method: 'POST', body: {\n        reportRequests: reportBatchRequests,\n      }\n    });\n  }\n\n  function toDate(stringDate) {\n    var year = stringDate.substr(0, 4), month = stringDate.substr(4, 2) - 1,    // -1 as months are 0 indexed\n      day = stringDate.substr(6, 2);\n    var D = new Date(year, month, day);\n    return (D.getFullYear() == year && D.getMonth() == month && D.getDate() == day) ? D : 'invalid date';\n  }\n\n  function drawLineChart(title, xAxisName, xAxisType, yAxisName, yAxisType, reportRows, chartContainer) {\n\n    var data = new google.visualization.DataTable();\n\n    data.addColumn(xAxisType, xAxisName);\n    data.addColumn(yAxisType, yAxisName);\n    if ((reportRows != null) && (reportRows != undefined) && (reportRows.length > 0)) {\n      reportRows.forEach(row => data.addRow([toDate(row.dimensions[0]), parseInt(row.metrics[0].values[0])]));\n    }\n    var options = {\n      //title: title,\n      curveType: 'function', legend: {position: 'bottom', textStyle: {fontSize:12}},\n    };\n\n    var chart = new google.charts.Line(document.getElementById(chartContainer));\n    chart.draw(data, google.charts.Line.convertOptions(options));\n  }\n\n  function drawTableChart(title, col1Name, col1Type, col2Name, col2Type, reportRows, chartContainer) {\n\n    var data = new google.visualization.DataTable();\n\n\n    var options;\n    if ((reportRows != null) && (reportRows != undefined) && (reportRows.length > 0)) {\n      data.addColumn(col1Type, col1Name);\n      data.addColumn(col2Type, col2Name);\n      data.setColumnProperty(0, 'className', 'ga-top-chart-text');\n      reportRows.forEach(row => data.addRow([row.dimensions[0], parseInt(row.metrics[0].values[0])]));\n      options = {\n        showRowNumber: true, width: '100%', height: '100%',\n      };\n    } else {\n      data.addColumn(\"string\", col1Name);\n      data.setColumnProperty(0, 'className', 'ga-top-chart-text-empty');\n      data.addRows( [[ \"No events found\"]]);\n      options = {\n        showRowNumber: false, width: '100%', height: '391px', minWidth: '100px'\n      };\n    }\n\n\n\n    var table = new google.visualization.Table(document.getElementById(chartContainer));\n    table.draw(data, options);\n  }\n\n\n})();\n"]}